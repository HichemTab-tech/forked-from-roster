#!/usr/bin/env php
<?php

declare(strict_types=1);

use Laravel\Roster\Enums\Packages;
use Laravel\Roster\Roster;

require __DIR__ . '/vendor/autoload.php';

$directory = $argv[1] ?? null;
if (empty($directory)) {
    echo 'Pass a valid directory as an argument';
    exit(1);
}

if (!is_dir($directory) || !is_readable($directory)) {
    echo 'Pass a readable directory as the only argument';
    exit(1);
}

$roster = Roster::scan($directory);

// ANSI color codes
$colors = [
    'reset' => "\033[0m",
    'bold' => "\033[1m",
    'white' => "\033[37m",
    'black' => "\033[30m",
    'blue_bg' => "\033[44m",
    'green_bg' => "\033[42m",
    'yellow_bg' => "\033[43m",
    'cyan' => "\033[36m",
    'green' => "\033[32m",
    'yellow' => "\033[33m",
    'red' => "\033[31m"
];

function printHeader(string $title, string $bgColor, string $textColor, array $colors): void
{
    $padding = str_repeat(' ', 2);
    echo $colors[$bgColor] . $colors[$textColor] . $colors['bold'] .
        $padding . $title . $padding . $colors['reset'] . PHP_EOL;
}

function printItems(array $items, string $color, array $colors): void
{
    if (empty($items)) {
        echo $colors['cyan'] . "  → None found" . $colors['reset'] . PHP_EOL;
        return;
    }

    foreach ($items as $item) {
        echo $colors[$color] . "  → " . $item . $colors['reset'] . PHP_EOL;
    }
}

// Get and sort packages
$packages = $roster->packages()->production()->map(fn($pkg) => $pkg->package()->value . ' (' . $pkg->version() . ')')->sort()->values()->all();
$devPackages = $roster->packages()->dev()->map(fn($pkg) => $pkg->package()->value . ' (' . $pkg->version() . ')')->sort()->values()->all();
$approaches = $roster->approaches()->map(fn($approach) => $approach->approach()->value)->sort()->values()->all();

// Print results
echo PHP_EOL;

printHeader('PACKAGES', 'blue_bg', 'black', $colors);
printItems($packages, 'green', $colors);
echo PHP_EOL;

printHeader('DEV PACKAGES', 'yellow_bg', 'black', $colors);
printItems($devPackages, 'yellow', $colors);
echo PHP_EOL;

printHeader('APPROACHES', 'green_bg', 'black', $colors);
printItems($approaches, 'cyan', $colors);
echo PHP_EOL;

printHeader('USING TAILWIND 4?', 'yellow_bg', 'cyan', $colors);


$tailwind = $roster->usesVersion(
    package: Packages::TAILWINDCSS,
    version: '4.0.0',
    operator: '>='
);


printItems([$tailwind ? 'It totally is' : 'No it ain\'t'], $tailwind ? 'cyan' : 'red', $colors);
